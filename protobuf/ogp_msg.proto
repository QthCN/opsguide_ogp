package ogp_msg;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// 消息头
message MsgHeader {
    // rc为0表示成功,否则表示失败。失败原因参见message
    required int32 rc = 1;
    optional string message = 2;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

message DockerContainerLabel {
    required string name = 1;
    required string value = 2;
}

message DockerContainerPort {
    required int32 private_port = 1;
    required int32 public_port = 2;
    required string type = 3;
}

message DockerContainerInfo {
    required string id = 1;
    required string image = 2;
    repeated string names = 3;
    required string command = 4;
    required int32 created = 5;
    required string status = 6;
    repeated DockerContainerPort ports = 7;
    repeated DockerContainerLabel labels = 8;
}

// 容器本地收集的运行时信息
message DockerRuntimeInfo {
    repeated DockerContainerInfo containers = 1;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

message DockerTargetContainerPort {
    required int32 private_port = 1;
    required int32 public_port = 2;
    required string type = 3;
}

message DockerTargetVolume {
    required string docker_volume = 1;
    required string host_volume = 2;
}

message DockerTargetDNS {
    required string dns = 1;
    required string address = 2;
}

message DockerTargetContainerInfo {
    required string image = 1;
    required string name = 2;
    repeated DockerTargetContainerPort ports = 3;
    repeated DockerTargetVolume volumes = 4;
    repeated DockerTargetDNS dns = 5;
    optional string extra_cmd = 6;
}

// 容器应该处于的运行时状态信息
message DockerTargetRuntimeInfo {
    repeated DockerTargetContainerInfo containers = 1;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

message ControllerApplicationVersion {
    required int32 id = 1;
    required string version = 2;
    required string registe_time = 3;
    required string description = 4;
}

message ControllerApplicationInfo {
    required int32 id = 1;
    required string source = 2;
    required string name = 3;
    required string description = 4;
    repeated ControllerApplicationVersion versions = 5;
}

// 获取应用列表信息
message ControllerApplicationsList {
    required MsgHeader header = 1;
    repeated ControllerApplicationInfo applications = 2;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// 增加应用请求
message AddApplicationReq {
    required string app_name = 1;
    required string app_version = 2;
    required string app_source = 3;
    required string app_version_desc = 4;
    optional string app_desc = 5;
}

// 增加应用响应
message AddApplicationRes {
    required MsgHeader header = 1;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

message ControllerAgentBindApps {
    required string app_name = 1;
    required string app_version = 2;
    required int32 app_id = 3;
    required int32 uniq_id = 4;
    // STOP/UNKNOWN/RUNNING/NOT_RUNNING
    optional string status = 5;
    optional string runtime_name = 6;
}

message ControllerAgentInfo {
    required string type = 1;
    required string ip = 2;
    required int32 has_sess = 3;
    required int64 last_sync_db_time = 4;
    required int64 last_heartbeat_time = 5;
    required int64 last_sync_time = 6;
    repeated ControllerAgentBindApps applications = 7;
}

// 获取agent列表信息
message ControllerAgentList {
    required MsgHeader header = 1;
    repeated ControllerAgentInfo agents = 2;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


message PublishAppCfgPort {
    required int32 private_port = 1;
    required int32 public_port = 2;
    required string type = 3;
}

message PublishAppCfgVolume {
    required string docker_volume = 1;
    required string host_volume = 2;
}

message PublishAppCfgDNS {
    required string dns = 1;
    required string address = 2;
}

message PublishAppCfg {
    repeated PublishAppCfgPort ports = 1;
    repeated PublishAppCfgVolume volumes = 2;
    repeated PublishAppCfgDNS dns = 3;
    optional string extra_cmd = 4;
}

message PublishHints {
    optional string da_ip = 1;
}

// 发布应用请求
message PublishAppReq {
    required int32 app_id = 1;
    required string app_version = 2;
    required string runtime_name = 3;
    optional PublishAppCfg app_cfg = 4;
    optional PublishHints hints = 5;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// 发布应用响应
message PublishAppRes {
    required MsgHeader header = 1;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// 下线版本请求
message RemoveAppVerReq {
    required int32 uniq_id = 1;
}

// 下线版本响应
message RemoveAppVerRes {
    required MsgHeader header = 1;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// 版本升级请求
message UpgradeAppVerReq {
    required int32 old_ver_uniq_id = 1;
    required string new_version = 2;
    required string runtime_name = 3;
}

// 版本升级响应
message UpgradeAppVerRes {
    required MsgHeader header = 1;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

message AddPortServiceReqBody {
    required int32 service_port = 1;
    optional int32 private_port = 2;
}

// service创建请求
message AddServiceReq {
    required int32 app_id = 1;
    required string service_type = 2;
    optional AddPortServiceReqBody port_service_body = 3;
}

// service创建响应
message AddServiceRes {
    required MsgHeader header = 1;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// 删除service请求
message DelServiceReq {
    required int32 service_id = 1;
}

// 删除service响应
message DelServiceRes {
    required MsgHeader header = 1;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

message ListServicesItem {
    required int32 id = 1;
    required int32 app_id = 2;
    required string app_name = 3;
    required int32 service_port = 4;
    required int32 private_port = 5;
    required string service_type = 6;
}

// 获取service列表响应
message ListServicesRes {
    required MsgHeader header = 1;
    repeated ListServicesItem services = 2;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// SDProxy同步service信息的内容

message ServiceSyncItem {
    required string ma_ip = 1;
    required int32 public_port = 2;
}

message ServiceSyncInfo {
    required int32 service_id = 1;
    required int32 app_id = 2;
    required string app_name = 3;
    required int32 service_port = 4;
    required string service_type = 5;
    repeated ServiceSyncItem items = 6;
}

message ServiceSyncData {
    required MsgHeader header = 1;
    // 全局唯一的递增ID,SDProxy需要依靠这个ID排序获取到最新信息
    required int32 uniq_id = 2;
    repeated ServiceSyncInfo infos = 3;
}
